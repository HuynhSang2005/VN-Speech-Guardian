name: CI - Unit & E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      CLERK_SECRET_KEY: sk_test_dummy
      CLERK_JWT_KEY: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArDummyKeyForCIOnly1234567890
        1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
        ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890
        0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
        QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0123456789
        -----END PUBLIC KEY-----
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: vsg_test
          POSTGRES_USER: vsg
          POSTGRES_PASSWORD: vsg
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U vsg -d vsg_test" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install deps
        run: |
          cd apps/gateway-nestjs
          npm ci --no-audit --no-fund

      - name: Lint
        run: |
          cd apps/gateway-nestjs
          npm run lint --silent || true

      - name: Dependency audit (fail on moderate+)
        run: |
          cd apps/gateway-nestjs
          npm audit --audit-level=moderate --json > audit.json || true
          cat audit.json
          node -e "const a=require('./audit.json'); if (a.metadata && a.metadata.vulnerabilities && Object.values(a.metadata.vulnerabilities).slice(2).some(v=>v>0)) { console.error('Moderate+ vulnerabilities found'); process.exit(1) }"

      - name: Wait for Postgres
        run: |
          docker run --rm --net=host appropriate/curl:latest --retry 5 --retry-delay 1 --silent --show-error http://localhost:5432 || true

      - name: Run migrations
        env:
          DATABASE_URL: postgres://vsg:vsg@localhost:5432/vsg_test
        run: |
          cd apps/gateway-nestjs
          npx prisma migrate deploy

      - name: Run tests
        run: |
          cd apps/gateway-nestjs
          npm test --silent
          npm run test:e2e --silent

      - name: Generate OpenAPI snapshot
        run: |
          cd apps/gateway-nestjs
          SKIP_DB=1 npm run generate:openapi --silent
          test -f public/openapi.json

      - name: Start mock AI worker (background)
        run: |
          cd apps/gateway-nestjs
          nohup node tooling/scripts/mock-ai-worker.js > /tmp/mock-ai.log 2>&1 &
          echo $! > /tmp/mock-ai.pid

      - name: Smoke test health
        env:
          TARGET_URL: http://localhost:3001
          TARGET_PATH: /health
          CONNECTIONS: 2
          DURATION: 5
        run: |
          cd apps/gateway-nestjs
          # Run app briefly with SKIP_DB=1 and mock AI URL
          nohup env SKIP_DB=1 AI_WORKER_URL=http://localhost:8001 npm run start &
          APP_PID=$!
          sleep 6
          node tooling/scripts/smoke-load-test.js
          kill $APP_PID || true

      - name: Build Docker image
        run: |
          cd apps/gateway-nestjs
          docker build -t gateway-nestjs:ci .
