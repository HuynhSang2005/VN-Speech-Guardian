# Optimized Docker Compose for VN Speech Guardian MVP
version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: vsg-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: vsg
      POSTGRES_PASSWORD: vsg
      POSTGRES_DB: vsg_dev
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"  # Standard PostgreSQL port for easier connection
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /dev/shm:/dev/shm  # Use shared memory for better performance
    command: >
      postgres 
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vsg -d vsg_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    networks:
      - vsg-network

  ai-worker:
    build:
      context: ../apps/ai-worker
      dockerfile: Dockerfile
      cache_from:
        - vsg-ai-worker:latest
    image: vsg-ai-worker:latest
    container_name: vsg-ai-worker
    restart: unless-stopped
    environment:
      # Model loading configuration
      AI_LOAD_MODELS: "true"
      USE_ONNXRUNTIME: "true"
      GATEWAY_API_KEY: dev-secret
      
      # Model paths (bind mounted for flexibility)
      PHOBERT_ONNX_DIR: /app/app/models/bert-finetuned-onnx
      PHOBERT_CHECKPOINT_DIR: /app/app/models/phobert-hsd
      
      # Whisper ASR configuration
      ASR_MODEL_NAME: small
      ASR_DEVICE: cpu
      ASR_COMPUTE_TYPE: int8
      ASR_LANGUAGE: vi
      ASR_BEAM_SIZE: "5"
      
      # Moderation thresholds (tunable via env)
      PHOBERT_BLOCK_THRESHOLD: "0.85"
      PHOBERT_WARN_THRESHOLD: "0.6"
      TEXT_MAX_LEN: "256"
      
      # FastAPI optimization
      CORS_ALLOWED_ORIGINS: "http://localhost:3001,http://localhost:5173"
    ports:
      - "8001:8001"
    volumes:
      # Bind mount models for quick iteration (read-only)
      - ../apps/ai-worker/app/models:/app/app/models:ro
      # Optional: bind mount for model cache
      - ai_worker_cache:/app/.cache
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "-q", "-O", "/dev/null", "http://localhost:8001/readyz"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 90s  # Allow time for model loading
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    networks:
      - vsg-network

  gateway-nestjs:
    build:
      context: ../apps/gateway-nestjs
      dockerfile: Dockerfile
      cache_from:
        - vsg-gateway:latest
    image: vsg-gateway:latest
    container_name: vsg-gateway
    restart: unless-stopped
    environment:
      # Database connection
      DATABASE_URL: "postgresql://vsg:vsg_dev_password@postgres:5432/vsg_dev"
      
      # AI Worker integration
      AI_WORKER_URL: "http://ai-worker:8001"
      GATEWAY_API_KEY: dev-secret
      
      # JWT configuration
      JWT_SECRET: "dev-jwt-secret-change-in-production"
      JWT_EXPIRES_IN: "24h"
      
      # Clerk authentication (set these in production)
      CLERK_PUBLISHABLE_KEY: ""
      CLERK_SECRET_KEY: ""
      
      # Server configuration
      NODE_ENV: development
      PORT: "3001"
      
      # CORS configuration
      CORS_ORIGINS: "http://localhost:5173,http://localhost:3000"
      
      # Rate limiting
      THROTTLE_TTL: "60"
      THROTTLE_LIMIT: "100"
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      ai-worker:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    networks:
      - vsg-network

# Optimized volumes with specific drivers
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  ai_worker_cache:
    driver: local

# Custom network for better service discovery and security
networks:
  vsg-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16